name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - reviewed_dev_to_weebhook
      - local_dev
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: ./gradlew clean build --refresh-dependencies

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

  coverage_report:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Coverage Report
        run: ./gradlew jacocoTestReport --rerun-tasks

      - name: Verify Coverage Report
        run: |
          ls -l ./build/reports/jacoco/test/ || echo "Coverage directory does not exist"

      - name: Save Coverage Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: full-jacoco-report
          path: ./build/reports/jacoco/test/

      - name: Post Coverage Summary as PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: Code Coverage
          message: |
            The full coverage report has been uploaded successfully.
            You can download it from the Actions artifacts section.

  static_analysis:
    runs-on: ubuntu-latest
    needs: coverage_report
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Run static code analysis
        run: ./gradlew check

  docker:
    runs-on: ubuntu-latest
    needs: static_analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --refresh-dependencies

      - name: Build Docker image
        run: docker build -t ghcr.io/danisharisov/telegram-bot:latest .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Push Docker image to GitHub Container Registry
        run: docker push ghcr.io/danisharisov/telegram-bot:latest
